---
- name: Configure Kernel Parameters for Pi K3s
  hosts:
    - maude
    - rod
    - todd
    - ned
  become: yes
  tasks:
    - name: Check current cgroup configuration
      command: cat /boot/firmware/cmdline.txt
      register: cmdline_check
      changed_when: false
      failed_when: false

    - name: Configure kernel parameters for K3s
      block:
        - name: Backup original cmdline.txt
          copy:
            src: /boot/firmware/cmdline.txt
            dest: /boot/firmware/cmdline.txt.backup
            remote_src: yes
          when: cmdline_check.stdout is defined and cmdline_check.stdout != ""

        - name: Append cgroup settings if not present
          lineinfile:
            path: /boot/firmware/cmdline.txt
            line: " cgroup_enable=memory cgroup_memory=1"
            state: present
          when: "'cgroup_memory=1' not in cmdline_check.stdout"
      when: cmdline_check.stdout is defined and cmdline_check.stdout != ""

    - name: Reboot system if cgroup configuration changed
      reboot:
        msg: "Reboot initiated by Ansible for cgroup configuration"
        connect_timeout: 5
        reboot_timeout: 300
        pre_reboot_delay: 0
        post_reboot_delay: 30
      when: "'cgroup_memory=1' not in cmdline_check.stdout"

    - name: Wait for system to come back online
      wait_for_connection:
        delay: 20
        timeout: 300
      when: "'cgroup_memory=1' not in cmdline_check.stdout"

- name: Install K3s Control Plane
  hosts: ned
  become: yes
  
  tasks:
    - name: Check if k3s is already installed
      command: which k3s
      register: k3s_check
      changed_when: false
      failed_when: false

    - name: Download K3s installation script
      get_url:
        url: https://get.k3s.io
        dest: /tmp/k3s-install.sh
        mode: '0755'
      when: k3s_check.rc != 0
      
    - name: Install K3s server
      command: /tmp/k3s-install.sh
      changed_when: true
      when: k3s_check.rc != 0
      register: k3s_install
      
    - name: Check K3s service status
      command: systemctl status k3s
      register: k3s_status
      changed_when: false
      failed_when: false
      
    - name: Wait for K3s to be ready
      command: k3s kubectl get nodes
      register: node_status
      until: node_status.rc == 0
      retries: 10
      delay: 30
      changed_when: false
      failed_when: false

    - name: Get K3s token
      command: cat /var/lib/rancher/k3s/server/node-token
      register: k3s_token
      changed_when: false

- name: Install K3s Workers
  hosts:
    - maude
    - rod
    - todd
    - huey
  become: yes
  
  tasks:

    - name: Check if k3s is already installed
      command: which k3s
      register: k3s_check
      changed_when: false
      failed_when: false
    
    - name: Download K3s installation script
      get_url:
        url: https://get.k3s.io
        dest: /tmp/k3s-install.sh
        mode: '0755'
      when: k3s_check.rc != 0
      
    - name: Install K3s agent
      command: sudo /tmp/k3s-install.sh agent --server https://{{ hostvars['ned']['ansible_host'] }}:6443 --token {{ hostvars['ned']['k3s_token'].stdout }}
      changed_when: true
      when: k3s_check.rc != 0
      register: k3s_install
      
    - name: Check K3s agent service status
      command: systemctl status k3s-agent
      register: k3s_agent_status
      changed_when: false
      failed_when: false
